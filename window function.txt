create database demp_db;
use demp_db;
create table shop_sales_data
(
  sales_date date,
  shop_id int,
  sales_amount int
);
insert into shop_sales_data values ('2022-02-14','S1',200),
('2022-02-15','S1',300),
('2022-02-14','S2',600),
('2022-02-15','S3',500),
('2022-02-18','S1',400),
('2022-02-17','S2',250),
('2022-02-15','S3',300);
select *from shop_sales_data ;

select *,
         sum(sales_amount) over (order by sales_amount desc)
         as running_sum_of_sales
from shop_sales_data; 

select *,
         sum(sales_amount) over (partition by shop_id  )
         as total_sum_sales
from shop_sales_data;         


select *,
         max(sales_amount) over (partition by shop_Id )
         as total_sum_sales
from shop_sales_data;


select *,
         sum(sales_amount) over (partition by shop_id order by sales_amount desc )
         as runnig_sum_of_sales
from shop_sales_data;


select *,
         sum(sales_amount) over (partition by shop_id order by sales_date desc )
         as runnig_sum_of_sales,
         avg(sales_amount) over (partition by shop_id order by sales_date desc )
         as runnig_avg_of_sales,
         max(sales_amount) over (partition by shop_id order by sales_date desc )
         as runnig_max_of_sales,
         min(sales_amount) over (partition by shop_id order by sales_date desc )
         as runnig_min_of_sales
         
from shop_sales_data;


insert into shop_sales_data values('2022-02-19','S1',400),
('2022-02-20','S1',400),
('2022-02-22','S1',300),
('2022-02-25','S1',200),
('2022-02-15','S2',600),
('2022-02-16','S2',600),
('2022-02-16','S3',500),
('2022-02-18','S3',500),
('2022-02-19','S3',300);

select *from shop_sales_data ;

select *,
         row_number() over(partition by shop_id order by sales_amount desc) as row_num,
         rank() over(partition by shop_id order by sales_amount desc) as rank_val,
         dense_rank() over(partition by shop_id order by sales_amount desc) as dense_rank_val
from shop_sales_data; 


create table employee
(
  emp_id int,
  salary int,
  dept_name VARCHAR(30)
);  

insert into employee values(1,10000,'software'),
(2,11000,'software'),
(3,11000,'software'),
(4,11000,'software'),
(5,15000,'finance'),
(6,15000,'finance'),
(7,15000,'iT'),
(8,12000,'HR'),
(9,12000,'HR'),
(10,11000,'HR');


select
    tmp.*
from(select *,
         row_number() over(partition by dept_name order by salary desc) as row_num
         from employee) tmp
where tmp.row_num = 1;         


select
    tmp.*
from(select *,
         rank() over(partition by dept_name order by salary desc) as row_num
         from employee) tmp
where tmp.row_num = 1;  

select
    tmp.*
from(select *,
         dense_rank() over(partition by dept_name order by salary desc) as row_num
         from employee) tmp
where tmp.row_num <= 2;

create table daily_sales
( sales_date date,
  sales_amount int
);  

insert into daily_sales values('2022-03-11',400),
('2022-03-12',500),
('2022-03-13',300),
('2022-03-14',600),
('2022-03-15',500),
('2022-03-16',200);

select *from daily_sales;

select sales_date,
       sales_amount as curr_day_sales,
       lag(sales_amount,1) over(order by sales_date) as prev_day_sales,
       sales_amount - lag(sales_amount,1) over(order by sales_date) as sales_diff
from daily_sales;       

select sales_date,
       sales_amount as curr_day_sales,
       lag(sales_amount,1,0) over(order by sales_date) as prev_day_sales,
       sales_amount - lag(sales_amount,1,0) over(order by sales_date) as sales_diff
from daily_sales;  

select sales_date,
       sales_amount as curr_day_sales,
       lead(sales_amount,1) over(order by sales_date) as prev_day_sales,
       sales_amount - lead(sales_amount,1) over(order by sales_date) as sales_diff
from daily_sales; 

select sales_date,
       sales_amount as curr_day_sales,
       lead(sales_amount,1,0) over(order by sales_date) as prev_day_sales,
       sales_amount - lead(sales_amount,1,0) over(order by sales_date) as sales_diff
from daily_sales;

select*,
        sum(sales_amount) over(order by sales_date rows between 1 preceding and
        1 following) as prev_plus_next_sales_sum
from daily_sales;        

select*,
        sum(sales_amount) over(order by sales_date rows between 1 preceding and
        current row) as prev_plus_next_sales_sum
from daily_sales;

select*,
        sum(sales_amount) over(order by sales_date rows between current row and
        1 following) as prev_plus_next_sales_sum
from daily_sales;

select*,
        sum(sales_amount) over(order by sales_date rows between unbounded preceding and
        current row) as prev_plus_next_sales_sum
from daily_sales;  

select*,
        sum(sales_amount) over(order by sales_date rows between current row and
        unbounded following) as prev_plus_next_sales_sum
from daily_sales;

select*,
        sum(sales_amount) over(order by sales_date rows between unbounded preceding and
        unbounded following) as prev_plus_next_sales_sum
from daily_sales;